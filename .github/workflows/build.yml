name: Build luci-app-ikoolproxy (aarch64_cortex-a53)

on:
  workflow_dispatch:   # 手动触发
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize build environment
        run: |
          sudo apt update
          sudo apt install -y build-essential git wget curl unzip python3 rsync gawk \
              libncurses5-dev libncursesw5-dev zlib1g-dev libssl-dev libelf-dev \
              subversion flex bison g++ gperf

      - name: Download OpenWrt SDK (release/snapshot fallback)
        run: |
          mkdir sdk && cd sdk
          REL_URL="https://downloads.openwrt.org/releases/23.05.3/targets/armvirt/64"
          SNAPSHOT_URL="https://downloads.openwrt.org/snapshots/targets/armvirt/64"
          MIRROR_REL="https://mirrors.tuna.tsinghua.edu.cn/openwrt/releases/23.05.3/targets/armvirt/64"
          MIRROR_SNAP="https://mirrors.tuna.tsinghua.edu.cn/openwrt/snapshots/targets/armvirt/64"

          # 尝试从 release 目录找 SDK
          FILE=$(wget -qO- $REL_URL/ | grep -oE 'openwrt-sdk-[^"]+Linux-x86_64\.tar\.xz' | head -n1)

          BASE_URL=$REL_URL
          MIRROR_URL=$MIRROR_REL

          # 如果 release 找不到，就用 snapshot
          if [ -z "$FILE" ]; then
            echo "⚠️ Release SDK not found, switching to snapshot..."
            FILE=$(wget -qO- $SNAPSHOT_URL/ | grep -oE 'openwrt-sdk-[^"]+Linux-x86_64\.tar\.xz' | head -n1)
            BASE_URL=$SNAPSHOT_URL
            MIRROR_URL=$MIRROR_SNAP
          fi

          echo "✅ Detected SDK file: $FILE"
          wget --tries=3 --timeout=30 $BASE_URL/$FILE || wget --tries=3 --timeout=30 $MIRROR_URL/$FILE
          tar -xJf $FILE --strip-components=1

      - name: Add iKoolProxy package
        run: |
          cd sdk/package
          git clone https://github.com/iwrt/luci-app-ikoolproxy.git

      - name: Configure SDK
        run: |
          cd sdk
          echo "CONFIG_PACKAGE_luci-app-ikoolproxy=m" >> .config
          make defconfig

      - name: Build iKoolProxy
        run: |
          cd sdk
          make package/luci-app-ikoolproxy/compile V=s -j$(nproc)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-ikoolproxy-ipk-aarch64_cortex-a53
          path: |
            sdk/bin/packages/*/base/luci-app-ikoolproxy*.ipk
            sdk/bin/packages/*/*/luci-app-ikoolproxy*.ipk

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          tag_name: ikoolproxy-aarch64
          name: "luci-app-ikoolproxy (aarch64_cortex-a53)"
          draft: false
          prerelease: false
          files: |
            sdk/bin/packages/*/base/luci-app-ikoolproxy*.ipk
            sdk/bin/packages/*/*/luci-app-ikoolproxy*.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
